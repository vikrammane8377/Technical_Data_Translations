spring.application.name=hackerx-translator_backend

# MySQL Database configuration (use environment variables in production)
spring.datasource.url=${SPRING_DATASOURCE_URL:}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Google Cloud and AI provider configuration
# Provide service account path via GOOGLE_APPLICATION_CREDENTIALS env var
google.cloud.credentials.file-path=${GOOGLE_APPLICATION_CREDENTIALS:}

# OpenAI and Gemini API keys should come from environment variables
openai.api.key=${OPENAI_API_KEY:}

# Gemini API configuration
gemini.api.key=${GEMINI_API_KEY:}
gemini.api.url=https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent

# Server configuration
server.port=8080
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Timeouts (milliseconds) for long-running translations
server.connection-timeout=3600000
spring.mvc.async.request-timeout=3600000
server.tomcat.keep-alive-timeout=120000
server.tomcat.connection-timeout=3600000
